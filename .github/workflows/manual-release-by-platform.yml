name: manual-release
on:
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        description: Select the platform/s
        options:
          - "macos-latest"
          - "self-hosted" #M1
          - "ubuntu-20.04"
          - "windows-latest"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setVariables.outputs.matrix }}
    steps:
      - id: setVariables
        run: echo "matrix=$input" >> $GITHUB_OUTPUT
        env:
          input: ${{ github.event.inputs.platform }}
  release:
    needs: setup
    runs-on: ${{ needs.setup.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (ubuntu only)
        if: needs.setup.outputs.matrix == 'ubuntu-20.04'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev librsvg2-dev
      # - name: Env vars (windows only)
      #   if: needs.setup.outputs.matrix == 'windows-latest'
      #   run: echo "VCPKG_ROOT=$env:VCPKG_INSTALLATION_ROOT" | Out-File -FilePath $env:GITHUB_ENV -Append
      # - name: Install openssl (windows only)
      #   if: needs.setup.outputs.matrix == 'windows-latest'
      #   run: vcpkg install openssl:x64-windows-static-md
      # - name: Install dependencies (windows ony)
      #   if: needs.setup.outputs.matrix == 'windows-latest'
      #   run: |
      #     choco install openssl
      #     (Get-Content C:\ProgramData\chocolatey\logs\choco.summary.log) -match 'Software installed to'

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "npm" # Set this to npm, yarn or pnpm.

      - name: Install app dependencies and build web
        # Remove `&& yarn build` if you build your frontend in `beforeBuildCommand`
        run: npm install # && npm run build # Change this to npm, yarn or pnpm.

      - name: Build the app
        uses: tauri-apps/tauri-action@v0

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          #tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
          tagName: v__VERSION__
          releaseName: "clickhouser-desktop v__VERSION__" # tauri-action replaces \_\_VERSION\_\_ with the app version.
          releaseBody: "See the assets to download and install this version."
          releaseDraft: true
          prerelease: false
